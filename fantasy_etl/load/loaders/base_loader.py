# 基础数据加载器类
#
# 迁移来源: @database_writer.py 中的通用写入逻辑和模式
# 主要映射:
#   - FantasyDatabaseWriter的通用方法 -> BaseLoader基类
#   - 通用的批量处理逻辑 -> 基类方法
#   - 错误处理和事务管理 -> 基类功能
#
# 职责:
#   - 加载器基础功能：
#     * 数据库会话管理：从session_manager获取会话
#     * 基础CRUD操作：创建、读取、更新、删除
#     * 通用错误处理：数据库异常捕获和处理
#   - 批量处理支持：
#     * 批量大小控制：batch_size配置
#     * 分批提交逻辑：避免大事务锁定
#     * 进度跟踪：处理进度监控和报告
#   - 事务管理：
#     * 事务边界控制：合理的提交和回滚点
#     * 错误回滚机制：异常时的数据一致性保证
#     * 嵌套事务支持：复杂操作的事务嵌套
#   - 数据验证：
#     * 基础字段验证：必需字段、数据类型检查
#     * 业务规则验证：通用业务约束检查
#     * 外键约束验证：关联数据存在性检查
#   - 去重处理：
#     * 唯一约束检查：主键和唯一键冲突处理
#     * 增量更新逻辑：新增vs更新的判断
#     * 冲突解决策略：数据冲突时的处理方案
#   - 性能优化：
#     * 批量插入优化：SQLAlchemy bulk操作
#     * 内存管理：大数据集处理的内存控制
#     * 查询优化：高效的存在性检查
#   - 日志和监控：
#     * 操作日志记录：成功、失败、警告信息
#     * 性能指标收集：处理时间、记录数量等
#     * 错误详情记录：便于问题诊断
#   - 统计计数：
#     * 处理统计：新增、更新、跳过的记录数
#     * 成功率计算：操作成功率统计
#     * 汇总报告：处理结果的统计摘要
#
# 输入: 数据库会话、配置参数
# 输出: 标准化的加载器接口和通用功能 