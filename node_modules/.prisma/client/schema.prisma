// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id         Int      @id @default(autoincrement())
  yahoo_guid String   @unique
  name       String?
  nickname   String?
  email      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // 关系
  games UserGame[]
  teams Team[]     @relation("TeamManager")

  @@map("users")
}

// 游戏表
model Game {
  id         Int      @id @default(autoincrement())
  game_key   String   @unique
  game_id    String   @unique
  name       String?
  code       String?
  type       String?
  url        String?
  season     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // 关系
  leagues     League[]
  users       UserGame[]
  playerStats PlayerStat[]

  @@map("games")
}

// 用户游戏关联表
model UserGame {
  id         Int      @id @default(autoincrement())
  user_id    Int
  game_id    Int
  created_at DateTime @default(now())

  // 关系
  user User @relation(fields: [user_id], references: [id])
  game Game @relation(fields: [game_id], references: [id])

  @@map("user_games")
}

// 联盟表
model League {
  id           Int       @id @default(autoincrement())
  league_key   String    @unique
  league_id    String?
  name         String?
  url          String?
  draft_status String?
  num_teams    Int?
  scoring_type String?
  current_week Int?
  start_week   Int?
  end_week     Int?
  start_date   DateTime?
  end_date     DateTime?
  game_id      Int
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt

  // 关系
  game     Game           @relation(fields: [game_id], references: [id])
  teams    Team[]
  settings LeagueSetting?

  @@map("leagues")
}

// 联盟设置表
model LeagueSetting {
  id            Int      @id @default(autoincrement())
  league_id     Int      @unique
  settings_data String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // 关系
  league League @relation(fields: [league_id], references: [id])

  @@map("league_settings")
}

// 队伍表
model Team {
  id                       Int      @id @default(autoincrement())
  team_key                 String   @unique
  team_id                  String?
  name                     String?
  is_owned_by_current_user Boolean  @default(false)
  url                      String?
  team_logo                String?
  waiver_priority          Int?
  number_of_moves          Int      @default(0)
  number_of_trades         Int      @default(0)
  league_id                Int
  manager_user_id          Int?
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt

  // 关系
  league    League        @relation(fields: [league_id], references: [id])
  manager   User?         @relation("TeamManager", fields: [manager_user_id], references: [id])
  roster    TeamPlayer[]
  standings TeamStanding?

  @@map("teams")
}

// 队伍排名表
model TeamStanding {
  id             Int      @id @default(autoincrement())
  team_id        Int      @unique
  rank           Int?
  points_for     Float?
  points_against Float?
  wins           Int      @default(0)
  losses         Int      @default(0)
  ties           Int      @default(0)
  percentage     Float?
  streak         String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // 关系
  team Team @relation(fields: [team_id], references: [id])

  @@map("team_standings")
}

// 球员表
model Player {
  id                       Int      @id @default(autoincrement())
  player_key               String   @unique
  player_id                String?
  name                     String?
  first_name               String?
  last_name                String?
  editorial_player_key     String?
  editorial_team_key       String?
  editorial_team_full_name String?
  editorial_team_abbr      String?
  uniform_number           String?
  display_position         String?
  headshot_url             String?
  is_undroppable           Boolean  @default(false)
  position_type            String?
  eligible_positions       String?
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt

  // 关系
  teams TeamPlayer[]
  stats PlayerStat[]

  @@map("players")
}

// 队伍球员关联表
model TeamPlayer {
  id                Int      @id @default(autoincrement())
  team_id           Int
  player_id         Int
  position          String?
  selected_position String?
  is_starting       Boolean  @default(false)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // 关系
  team   Team   @relation(fields: [team_id], references: [id])
  player Player @relation(fields: [player_id], references: [id])

  @@map("team_players")
}

// 球员统计数据表
model PlayerStat {
  id         Int      @id @default(autoincrement())
  player_id  Int
  game_id    Int
  season     String?
  week       Int?
  stats_data String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // 关系
  player Player @relation(fields: [player_id], references: [id])
  game   Game   @relation(fields: [game_id], references: [id])

  @@map("player_stats")
}
